#!/bin/bash
# dem Script übergebene Parameter muss man vor Funktionsaufruf retten
if [ -z $1 ]
  then
    echo -n "Bis zu welcher Zahl Primzahlen suchen : "
    read N
  else
    N=$1
  fi

function PRIMTEST {
  PT_N=$1
  PT_PRIM=1	# 1 Primzahl 0 keine Primzahl
		# wenn man keinen Teiler findet --> Primzahl
  if [ $PT_N -le 1 ] # Zahl <=1 --> keine Primzahl
    then
      PT_PRIM=0
      return $PT_PRIM	# keine Prinzahl --> zurück
    fi
  # Teste, ob durch 2 teilbar --> gerade Zahlen außer 2 sind keine Primfaktoren
  # Achtung: die 2 ist eine Primzahl: mit -a $PT_N -ne 2 wird die 2 ausgeschlossen
  if [ $(( $PT_N % 2)) -eq 0 -a $PT_N -ne 2 ]
    then
      PT_PRIM=0
      return $PT_PRIM   # keine Prinzahl --> zurück
    fi
  # Test teilen durch ungerade Zahlen ab 3
  # Test nur bis sqrt($PT_N) sinnvoll
  PT_MAX=`echo "scale=0; sqrt( $PT_N )" | bc -l`
  for ((PT_i=3;PT_i<$PT_MAX;PT_i+=2))
    do
      if [ $(( $PT_N % $PT_i)) -eq 0 ]
        then
          PT_PRIM=0
          return $PT_PRIM   # keine Prinzahl --> zurück
        fi
    done

return $PT_PRIM
} # end function PRIMTEST

echo -n "2 "
for ((i=3;i<=$N;i+=2))
  do
    PRIMTEST $i		# call function PRIMTEST
      if [ `echo $?` -eq 1 ]
        then
          echo -n "$i "
        fi
    done
echo ""
exit 0
